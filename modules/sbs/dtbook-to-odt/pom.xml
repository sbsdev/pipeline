<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>ch.sbs.pipeline</groupId>
    <artifactId>modules-parent</artifactId>
    <version>1.7-SNAPSHOT</version>
    <relativePath />
  </parent>
  
  <groupId>ch.sbs.pipeline</groupId>
  <artifactId>dtbook-to-odt</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  
  <name>DAISY Pipeline 2 module :: sbs:dtbook-to-odt</name>
  
  <properties>
    <!--
	this needs to match the version in scripts-bom (1.10.1: defined in modules-parent)
    -->
    <dtbook-to-odt.version>1.1.1</dtbook-to-odt.version>
    <!--
	this needs to match the version in scripts-utils-bom (1.10.2-SNAPSHOT: defined in modules-parent)
    -->
    <odt-utils.version>1.0.2</odt-utils.version>
    <tagNameFormat>v@{project.version}</tagNameFormat>
  </properties>
  
  <dependencies>
    <!--
	runtime dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-to-odt</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>odt-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>file-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <!--
	for dtbook-to-odt
    -->
  <dependency>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>image-utils</artifactId>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>asciimath-utils</artifactId>
    <scope>test</scope>
    </dependency>
    <!--
	for odt-utils
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>fileset-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>zip-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>common-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <!--
	other transitive dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>html-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>mediatype-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>validation-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-validator</artifactId>
      <scope>test</scope>
    </dependency>
    <!--
	test dependencies
    -->
    <dependency>
      <groupId>org.daisy.maven</groupId>
      <artifactId>xproc-engine-daisy-pipeline</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.xprocspec</groupId>
      <artifactId>xprocspec</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.maven</groupId>
      <artifactId>xprocspec-runner</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline</groupId>
      <artifactId>pax-exam-helper</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <scm>
    <developerConnection>scm:git:ssh://git@github.com:sbsdev/dtbook-to-odt.git</developerConnection>
  </scm>

  <build>
    <resources>
      <resource>
	<directory>src/main/resources</directory>
	<excludes>
	  <exclude>templates/**</exclude>
	  <exclude>xml/dtbook-to-odt.xpl</exclude>
	</excludes>
      </resource>
      <resource>
	<directory>target/generated-resources</directory>
	<includes>
	  <include>templates/**</include>
	  <include>xml/dtbook-to-odt.xpl</include>
	</includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>shell-maven-plugin</artifactId>
	<executions>
	  <execution>
	    <id>generate-ott</id>
	    <phase>generate-resources</phase>
	    <goals>
	      <goal>shell</goal>
	    </goals>
	    <configuration>
	      <workDir>${project.basedir}</workDir>
	      <chmod>true</chmod>
	      <script>
		#!/bin/sh
		zip_odt() {
		  cd $1
		  zip -0 -X $2 mimetype
		  zip -r $2 * -x mimetype
		}
		rm -rf target/generated-resources/templates
		mkdir -p target/generated-resources/templates
		for template in $(ls src/main/resources/templates); do
		  (zip_odt src/main/resources/templates/${template} $(pwd)/target/generated-resources/templates/${template})
		done
	      </script>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-resources-plugin</artifactId>
	<executions>
	  <execution>
	    <id>filter-resources</id>
	    <phase>process-resources</phase>
	    <goals>
	      <goal>copy-resources</goal>
	    </goals>
	    <configuration>
	      <outputDirectory>target/generated-resources</outputDirectory>
	      <resources>
		<resource>
		  <directory>src/main/resources</directory>
		  <includes>
		    <include>xml/dtbook-to-odt.xpl</include>
		  </includes>
		  <filtering>true</filtering>
		</resource>
	      </resources>
	      <filters>
		<filter>${project.build.directory}/filters/detailed-version.properties</filter>
	      </filters>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.ops4j.pax.exam</groupId>
	<artifactId>maven-paxexam-plugin</artifactId>
	<executions>
	  <execution>
	    <id>generate-depends-file</id>
	    <goals>
	      <goal>generate-depends-file</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-dependency-plugin</artifactId>
	<executions>
	  <execution>
	    <id>copy-dependencies</id>
	    <phase>prepare-package</phase>
	    <goals>
	      <goal>copy</goal>
	    </goals>
	    <configuration>
	      <useBaseVersion>true</useBaseVersion>
	      <prependGroupId>true</prependGroupId>
	      <artifactItems>
		<artifactItem>
		  <groupId>org.daisy.pipeline.modules</groupId>
		  <artifactId>dtbook-to-odt</artifactId>
		</artifactItem>
		<artifactItem>
		  <groupId>org.daisy.pipeline.modules</groupId>
		  <artifactId>odt-utils</artifactId>
		</artifactItem>
	      </artifactItems>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.vafer</groupId>
	<artifactId>jdeb</artifactId>
	<configuration>
	  <dataSet>
	    <data>
	      <type>file</type>
	      <src>target/${project.artifactId}-${project.version}.jar</src>
	      <mapper>
		<type>perm</type>
		<prefix>/opt/daisy-pipeline2/modules</prefix>
	      </mapper>
	    </data>
	    <!--
		dtbook-to-odt is not in pipeline-assembly yet
	    -->
	    <data>
	      <type>file</type>
	      <src>target/dependency/org.daisy.pipeline.modules.dtbook-to-odt-${dtbook-to-odt.version}.jar</src>
	      <mapper>
		<type>perm</type>
		<prefix>/opt/daisy-pipeline2/modules</prefix>
	      </mapper>
	    </data>
	    <!--
		odt-utils is not in pipeline-assembly yet
	    -->
	    <data>
	      <type>file</type>
	      <src>target/dependency/org.daisy.pipeline.modules.odt-utils-${odt-utils.version}.jar</src>
	      <mapper>
		<type>perm</type>
		<prefix>/opt/daisy-pipeline2/modules</prefix>
	      </mapper>
	    </data>
	  </dataSet>
	</configuration>
      </plugin>
      <!--
	  intended to be called from command line
      -->
      <plugin>
	<artifactId>maven-resources-plugin</artifactId>
	<executions>
	  <execution>
	    <id>default-cli</id>
	    <phase>none</phase>
	    <goals>
	      <goal>copy-resources</goal>
	    </goals>
	    <configuration>
	      <outputDirectory>${project.build.directory}/doc/doc</outputDirectory>
	      <resources>
		<resource>
		  <directory>src/main/doc</directory>
		  <excludes>
		    <include>*.org</include>
		  </excludes>
		</resource>
	      </resources>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-jar-plugin</artifactId>
	<executions>
	  <execution>
	    <id>default-cli</id>
	    <phase>none</phase>
	    <goals>
	      <goal>jar</goal>
	    </goals>
	    <configuration>
	      <classifier>doc</classifier>
	      <classesDirectory>${project.build.directory}/doc</classesDirectory>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-install-plugin</artifactId>
	<executions>
	  <execution>
	    <id>default-cli</id>
	    <phase>none</phase>
	    <goals>
	      <goal>install-file</goal>
	    </goals>
	    <configuration>
	      <file>${project.build.directory}/${project.artifactId}-${project.version}-doc.jar</file>
	      <groupId>${project.groupId}</groupId>
	      <artifactId>${project.artifactId}</artifactId>
	      <version>${project.version}</version>
	      <classifier>doc</classifier>
	      <packaging>jar</packaging>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
  
</project>
