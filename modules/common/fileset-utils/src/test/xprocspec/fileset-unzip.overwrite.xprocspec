<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec" xmlns:test="http://www.daisy.org/ns/xprocspec/inline-script" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step"
    xmlns:px="http://www.daisy.org/ns/pipeline/xproc" xmlns:d="http://www.daisy.org/ns/pipeline/data" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <x:script>
        <p:declare-step type="test:test" version="1.0">
            <p:output port="result" sequence="true">
                <p:pipe port="result" step="fileset-unzip"/>
            </p:output>
            <p:output port="fileset">
                <p:pipe port="fileset" step="fileset-unzip"/>
            </p:output>
            <p:option name="href" required="true"/>
            <p:option name="file" required="true"/>
            <p:option name="unzipped-basedir" required="true"/>
            <p:option name="overwrite" required="true"/>
            <p:option name="file-should-exist" required="true"/>
            <p:import href="../../../src/main/resources/xml/xproc/fileset-unzip.xpl"/>
            <p:add-attribute match="/*" attribute-name="file">
                <p:with-option name="attribute-value" select="$file"/>
                <p:input port="source">
                    <p:inline>
                        <c:dummy-document/>
                    </p:inline>
                </p:input>
            </p:add-attribute>
            <p:choose>
                <p:when test="$file-should-exist = 'true'">
                    <p:store name="store">
                        <p:with-option name="href" select="concat($unzipped-basedir,/*/@file)"/>
                    </p:store>
                    <p:identity>
                        <p:input port="source">
                            <p:pipe port="result" step="store"/>
                        </p:input>
                    </p:identity>
                </p:when>
                <p:otherwise>
                    <p:identity/>
                </p:otherwise>
            </p:choose>
            <px:fileset-unzip name="fileset-unzip" load-to-memory="false" store-to-disk="true">
                <p:with-option name="href" select="$href"/>
                <p:with-option name="file" select="$file"/>
                <p:with-option name="unzipped-basedir" select="$unzipped-basedir"/>
                <p:with-option name="overwrite" select="$overwrite"/>
            </px:fileset-unzip>
        </p:declare-step>
    </x:script>

    <x:scenario label="Scenario for testing px:fileset-unzip">
        <x:call step="test:test">
            <x:option name="href" select="resolve-uri('samples/test.epub', base-uri(.))"/>
            <x:option name="file" select="'EPUB/package.opf'"/>
            <x:option name="unzipped-basedir" select="concat($temp-dir,'test1/')"/>
            <x:option name="overwrite" select="'false'"/>
            <x:option name="file-should-exist" select="'false'"/>
        </x:call>

        <x:context label="the result port">
            <x:document type="port" port="result"/>
        </x:context>
        <x:expect label="There must be exactly one document on the result port" type="count" min="1" max="1"/>
        <x:expect label="There must be exactly 1 entry in the zip manifest" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'EPUB/package.opf' must exist in the zip manifest" type="xpath" test="/*/*/@name" equals="'EPUB/package.opf'"/>

        <x:context label="the fileset port">
            <x:document type="port" port="fileset"/>
        </x:context>
        <x:expect label="There must be exactly 1 file in the fileset" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'package.opf' must exist in the fileset" type="xpath" test="/*/*/@href" equals="'EPUB/package.opf'"/>

        <x:context label="the output directory">
            <x:document type="directory" base-uri="temp-dir" href="test1/" recursive="true"/>
        </x:context>
        <x:expect label="The output directory should contain 1 subdirectory" type="xpath" test="count(/*/c:directory)" equals="1"/>
        <x:expect label="The output directory should contain 0 files" type="xpath" test="count(/*/c:file)" equals="0"/>
        <x:expect label="The output subdirectory should contain 0 subdirectories" type="xpath" test="count(/*/*/c:directory)" equals="0"/>
        <x:expect label="The output subdirectory should contain 1 file" type="xpath" test="count(/*/*/c:file)" equals="1"/>
        <x:expect label="The file 'package.opf' must exist in the output directory" type="xpath" test="/*/*/c:file/@name" equals="'package.opf'"/>

        <x:context label="the output file">
            <x:document type="file" base-uri="temp-dir" href="test1/EPUB/package.opf"/>
        </x:context>
        <x:expect label="The document should be a OPF" type="xpath" test="concat('{',namespace-uri(/*),'}',local-name(/*))" equals="'{http://www.idpf.org/2007/opf}package'"/>
    </x:scenario>


    <x:scenario label="Scenario for testing px:fileset-unzip">

        <x:call step="test:test">
            <x:option name="href" select="resolve-uri('samples/test.epub', base-uri(.))"/>
            <x:option name="file" select="'EPUB/package.opf'"/>
            <x:option name="unzipped-basedir" select="concat($temp-dir,'test2/')"/>
            <x:option name="overwrite" select="'false'"/>
            <x:option name="file-should-exist" select="'true'"/>
        </x:call>

        <x:context label="the result port">
            <x:document type="port" port="result"/>
        </x:context>
        <x:expect label="There must be exactly one document on the result port" type="count" min="1" max="1"/>
        <x:expect label="There must be exactly 1 entry in the zip manifest" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'EPUB/package.opf' must exist in the zip manifest" type="xpath" test="/*/*/@name" equals="'EPUB/package.opf'"/>

        <x:context label="the fileset port">
            <x:document type="port" port="fileset"/>
        </x:context>
        <x:expect label="There must be exactly 1 file in the fileset" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'package.opf' must exist in the fileset" type="xpath" test="/*/*/@href" equals="'EPUB/package.opf'"/>

        <x:context label="the output directory">
            <x:document type="directory" base-uri="temp-dir" href="test2/" recursive="true"/>
        </x:context>
        <x:expect label="The output directory should contain 1 subdirectories" type="xpath" test="count(/*/c:directory)" equals="1"/>
        <x:expect label="The top-level output directory should contain 0 files" type="xpath" test="count(/*/c:file)" equals="0"/>
        <x:expect label="The sub-directory of the output directory should contain 1 file" type="xpath" test="count(/*/c:directory/c:file)" equals="1"/>
        <x:expect label="The sub-directory of the output directory should contain 0 directories" type="xpath" test="count(/*/c:directory/c:directory)" equals="0"/>
        <x:expect label="The file 'package.opf' must exist in the output directory" type="xpath" test="/*/c:directory/c:file/@name" equals="'package.opf'"/>

        <x:context label="the output file">
            <x:document type="file" base-uri="temp-dir" href="test2/EPUB/package.opf"/>
        </x:context>
        <x:expect label="The document should *not* be a OPF (i.e. the existing document should not be overwritten)" type="xpath" test="concat('{',namespace-uri(/*),'}',local-name(/*))"
            equals="'{http://www.idpf.org/2007/opf}package'" xfail="true"/>
    </x:scenario>

    <x:scenario label="Scenario for testing px:fileset-unzip">
        <x:call step="test:test">
            <x:option name="href" select="resolve-uri('samples/test.epub', base-uri(.))"/>
            <x:option name="file" select="'EPUB/package.opf'"/>
            <x:option name="unzipped-basedir" select="concat($temp-dir,'test3/')"/>
            <x:option name="overwrite" select="'true'"/>
            <x:option name="file-should-exist" select="'true'"/>
        </x:call>

        <x:context label="the result port">
            <x:document type="port" port="result"/>
        </x:context>
        <x:expect label="There must be exactly one document on the result port" type="count" min="1" max="1"/>
        <x:expect label="There must be exactly 1 entry in the zip manifest" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'EPUB/package.opf' must exist in the zip manifest" type="xpath" test="/*/*/@name" equals="'EPUB/package.opf'"/>

        <x:context label="the fileset port">
            <x:document type="port" port="fileset"/>
        </x:context>
        <x:expect label="There must be exactly 1 file in the fileset" type="xpath" test="count(/*/*)" equals="1"/>
        <x:expect label="The file 'package.opf' must exist in the fileset" type="xpath" test="/*/*/@href" equals="'EPUB/package.opf'"/>

        <x:context label="the output directory">
            <x:document type="directory" base-uri="temp-dir" href="test3/" recursive="true"/>
        </x:context>
        <x:expect label="The output directory should contain 1 subdirectory" type="xpath" test="count(/*/c:directory)" equals="1"/>
        <x:expect label="The output directory should contain 0 files" type="xpath" test="count(/*/c:file)" equals="0"/>
        <x:expect label="The output subdirectory should contain 0 subdirectories" type="xpath" test="count(/*/*/c:directory)" equals="0"/>
        <x:expect label="The output subdirectory should contain 1 file" type="xpath" test="count(/*/*/c:file)" equals="1"/>
        <x:expect label="The file 'package.opf' must exist in the output directory" type="xpath" test="/*/*/c:file/@name" equals="'package.opf'"/>

        <x:context label="the output file">
            <x:document type="file" base-uri="temp-dir" href="test3/EPUB/package.opf"/>
        </x:context>
        <x:expect label="The document should be a OPF (i.e. the existing document should be overwritten)" type="xpath" test="concat('{',namespace-uri(/*),'}',local-name(/*))"
            equals="'{http://www.idpf.org/2007/opf}package'"/>
    </x:scenario>

</x:description>
