<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.daisy</groupId>
    <artifactId>daisy</artifactId>
    <version>3</version>
    <relativePath/>
  </parent>

  <groupId>org.daisy.pipeline</groupId>
  <version>1.0.0-SNAPSHOT</version>
  <artifactId>sapi-nar</artifactId>
  <packaging>nar</packaging>

  <name>JNI libraries for SAPI</name>
  <description>Build of platform-dependent JNI libraries using the SAPI SDK</description>

  <properties>
	<win.sdk.location>C:\Program Files\Microsoft SDKs\Windows\v7.1</win.sdk.location>
	<vc.location>C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC</vc.location>
  </properties>


  <!-- PREREQUISITES: 								-->
  <!-- (1) Windows SDK installed (it contains SAPI)	-->
  <!-- (2) VC++ installed. ATL is not used so it can work with VC++ Express. -->
  <!-- (3) VC++ environment is configured in your path, e.g. -->
  <!--     C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\x64 -> for mt.exe -->
  <!--     C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\bin\x86_amd64 -> for link.exe and cl.exe -->
  <!--     C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\IDE -> for some dll -->

  <!-- Warning: you cannot cross-compile with mvn -Px86 -Px64. You must execute them separately. -->
  <!-- To cross-compile, you must edit the VC bin directory in your path, because cl.exe for targeting -->
  <!-- 64bits is different to the one targeting 32 bits platforms. -->
  <!-- The binary link.exe, however, can be the same. -->

  <build>
    <plugins>

	 <!-- uncomment the following plugin execution if you want to isolate the SAPI headers -->
	 <!-- to be used in a MinGW environment -->
     <!--  <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/sapi-sdk</outputDirectory>
              <resources>
                <resource>
                  <directory>${win.sdk.location}</directory>
                  <includes>
					<include>sapi*.h</include>
					<include>sperror.h</include>
				  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin> -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>nar-maven-plugin</artifactId>
        <version>3.0.0-scijava-2</version>
        <extensions>true</extensions>
        <configuration>
		  <!-- The doc says 'arch' but it is actually 'architecture' with scijava. -->
		  <arch>${target.arch}</arch>
		  <architecture>${target.arch}</architecture>
          <cpp>
            <name>msvc</name>
            <includes>
              <include>**/*.cpp</include>
            </includes>
            <options>
			  <option>/MD</option> <!-- This ensures dynamic linking to prevent any license issues. -->
			  <option>/O2</option>
			  <option>/I${win.sdk.location}\include</option>
              <option>/I${JAVA_HOME}\include</option>
			  <option>/I${JAVA_HOME}\include\win32</option>
			  <option>/I${vc.location}\include</option>
            </options>
		   </cpp>
          <linker>
            <name>msvc</name>
            <options>
				<option>/LIBPATH:${vc.libdir}</option>
				<option>/LIBPATH:${sdk.libdir}</option>
				<!-- The expected <lib><name>sapi...</lib> doesn't seem to work for enumerating the libraries. -->
				<option>/DEFAULTLIB:sapi</option>
				<option>/DEFAULTLIB:ole32</option>
				<option>/DEFAULTLIB:shlwapi</option> <!-- for its memory stream -->
				<option>${architecture.option}</option>
            </options>
          </linker>
          <libraries>
            <library>
              <type>jni</type>
			  <linkCPP>false</linkCPP>
            </library>
          </libraries>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
   <profile>
		<id>x86</id>
        <!-- <activation>
			<os>
				<family>windows</family>
				<arch>x86</arch>
			</os>
		</activation> -->
		<properties>
			<target.arch>x86</target.arch>
			<sdk.libdir>${win.sdk.location}\Lib</sdk.libdir>
			<vc.libdir>${vc.location}\lib</vc.libdir>
			<architecture.option>/MACHINE:X86</architecture.option>
		</properties>
	</profile>
	<profile>
		<id>x64</id>
		<!-- <activation>
			<os>
				<family>windows</family>
				<arch>amd64</arch>
			</os>
		</activation> -->
		<properties>
			<target.arch>x64</target.arch>
			<sdk.libdir>${win.sdk.location}\Lib\x64</sdk.libdir>
			<vc.libdir>${vc.location}\lib\amd64</vc.libdir>
			<architecture.option>/MACHINE:X64</architecture.option>
		</properties>
	</profile>
  </profiles>

  <pluginRepositories>
    <pluginRepository>
      <id>imagej.thirdparty</id>
      <url>http://maven.imagej.net/content/repositories/thirdparty</url>
    </pluginRepository>
  </pluginRepositories>

</project>
