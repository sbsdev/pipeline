<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>modules-parent</artifactId>
    <version>1.10.0-SNAPSHOT</version>
    <relativePath>../../../parent</relativePath>
  </parent>

  <version>3.0.0-SNAPSHOT</version>
  <artifactId>tts-adapter-attnative</artifactId>
  <packaging>bundle</packaging>

  <name>DAISY Pipeline 2 module :: TTS Adapter for AT&#038;T's SDK</name>
  <description>Implementation of the TTS API for the AT&#038;T's SDK V4 and V5</description>

  <dependencies>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>tts-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.libs</groupId>
      <artifactId>saxon-he</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <properties>
    <expose-services>
      org.daisy.pipeline.tts.attnative.impl.ATTService
    </expose-services>
  </properties>

  <build>
    <plugins>
      <!-- note: run mvn compile native:javah to generate again the C++ headers from -->
      <!-- the Java class. -->
      <!-- The headers are located in the sub-module -->
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>native-maven-plugin</artifactId>
	<extensions>true</extensions>
	<executions>
	  <execution>
	    <phase>none</phase>
	    <id>default-cli</id>
	    <goals>
	      <goal>javah</goal>
	    </goals>
	    <configuration>
	      <javahOS>linux</javahOS> <!-- the OS does not matter here -->
	      <javahOutputDirectory>../../native-libs/att-nar/src/main/jni</javahOutputDirectory>
	      <javahClassNames>
	  	<javahClassName>org.daisy.pipeline.tts.attnative.ATTLib</javahClassName>
	      </javahClassNames>
	    </configuration>
	  </execution>
	</executions>
      </plugin>

      <!-- Extract the library from the NAR package -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>att-nar</artifactId>
                  <version>1.0.0-SNAPSHOT</version>
                  <classifier>i386-Linux-gpp-jni</classifier>
                  <type>nar</type>
                </artifactItem>
		<artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>att-nar</artifactId>
                  <version>1.0.0-SNAPSHOT</version>
                  <classifier>amd64-Linux-gpp-jni</classifier>
                  <type>nar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<artifactId>maven-antrun-plugin</artifactId>
         <executions>
           <execution>
             <phase>generate-resources</phase>
             <goals>
               <goal>run</goal>
             </goals>
             <configuration>
              <tasks>
		<!-- warning: only one profile should be used for compilation since the .so or .dll -->
		<!-- will be copied to the same destination regardless of the profile chosen -->
                <copy todir="target/generated-resources/native">
                  <fileset dir="target/dependency">
                    <include name="**/*.so"/>
                    <include name="**/*.dylib"/>
                    <include name="**/*.dll"/>
                  </fileset>
                </copy>
              </tasks>
             </configuration>
	   </execution>
	 </executions>
      </plugin>

      <!-- Package the dynamic library into an OSGi bundle -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Import-Package>
              net.sf.saxon.*;version="${saxon.versionRange}",
              !org.daisy.common.spi,
              *
            </Import-Package>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>default-bundle</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>linux-bundle</id>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <classifier>linux</classifier>
              <instructions>
		<Bundle-NativeCode>
		  lib32/libatt.so;osname=linux;processor=x86,
		  lib64/libatt.so;osname=linux;processor=x86-64
		</Bundle-NativeCode>
                <Include-Resource>
		  {maven-resources},
                  lib32/libatt.so=target/generated-resources/native/lib/i386-Linux-gpp/jni/libatt-nar-1.0.0-SNAPSHOT.so,
		  lib64/libatt.so=target/generated-resources/native/lib/amd64-Linux-gpp/jni/libatt-nar-1.0.0-SNAPSHOT.so
                </Include-Resource>
              </instructions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <id>notester</id>
      <build>
	<plugins>
	  <plugin>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <configuration>
	      <excludes>
		<exclude>**/ATTNativeTest.java</exclude>
		<exclude>**/ATTEngineTest.java</exclude>
	      </excludes>
	    </configuration>
	  </plugin>
	</plugins>
      </build>
    </profile>
    <profile>
      <id>tester</id>
    </profile>
  </profiles>

</project>
