#!/bin/sh
# postrm script for daisy-pipeline2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

SYSTEM_PROPERTIES=${deb.pipeline.home}/etc/system.properties

case "$1" in
    
    upgrade)
        
        # -------
        # upgrade
        # -------
        
    ;;
    
    remove)
        
        # ------
        # remove
        # ------
        
        # restore configuration file
        
        [ -e $SYSTEM_PROPERTIES.keep ] && mv $SYSTEM_PROPERTIES.keep $SYSTEM_PROPERTIES
        
        # remove log files
        
        rm -rf ${deb.pipeline.log}
        
        # remove data
        
        rm -rf ${deb.pipeline.data}
        
    ;;
    
    purge)
        
        # -----
        # purge
        # -----
        
        # remove configuration file
        
        rm -f $SYSTEM_PROPERTIES
        for ext in '"~' .bak .keep .tmp .old .bak.old;  do
            rm -f $SYSTEM_PROPERTIES$ext
        done
        
        # clear debconf database
        
        if [ -e /usr/share/debconf/confmodule ]; then
            . /usr/share/debconf/confmodule
            db_purge
        fi
    ;;
    
    failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

