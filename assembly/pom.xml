<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.daisy</groupId>
    <artifactId>daisy</artifactId>
    <version>2</version>
    <relativePath />
  </parent>
  <groupId>org.daisy.pipeline</groupId>
  <artifactId>assembly</artifactId>
  <version>1.11.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>DAISY Pipeline 2 :: Assembly</name>
  <description>Builds the main distribution of the DAISY Pipeline 2.</description>
  <scm>
    <connection>scm:git:git@github.com:daisy-consortium/pipeline-assembly.git</connection>
    <url>scm:git:git@github.com:daisy-consortium/pipeline-assembly.git</url>
    <developerConnection>scm:git:git@github.com:daisy-consortium/pipeline-assembly.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <properties>
    <cli.version>2.1.0</cli.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.daisy.pipeline</groupId>
        <artifactId>cli</artifactId>
        <version>${cli.version}</version>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline</groupId>
        <artifactId>gui</artifactId>
        <version>1.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline</groupId>
        <artifactId>updater</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline</groupId>
        <artifactId>updater-gui</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.apache.felix.main</artifactId>
        <version>5.6.2</version>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline</groupId>
        <artifactId>framework-bom</artifactId>
        <version>1.11.1-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>scripts-bom</artifactId>
        <version>1.11.1-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>common-utils-bom</artifactId>
        <version>1.11.1-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>scripts-utils-bom</artifactId>
        <version>1.11.1-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules.braille</groupId>
        <artifactId>braille-modules-bom</artifactId>
        <version>1.10.2-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>nlp-modules-bom</artifactId>
        <version>1.11.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>tts-modules-bom</artifactId>
        <version>1.11.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.daisy.pipeline.modules</groupId>
        <artifactId>audio-modules-bom</artifactId>
        <version>1.11.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <extensions>
      <!--
           Version 2.2 has issues with Maven 3.0.3:
           java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I
           Tweak taken from:  http://code.google.com/p/phloc-parent-pom/source/browse/trunk/pom.xml?r=47
      -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.1</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-http</artifactId>
        <version>2.1</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-file</artifactId>
        <version>2.1</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-felix-launcher</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/bootstrap</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.main</artifactId>
                  <destFileName>felix.jar</destFileName>
                </artifactItem>
                <!--<artifactItem>-->
                <!--<groupId>org.daisy.pipeline</groupId>-->
                <!--<artifactId>launcher</artifactId>-->
                <!--<version>1.0.0</version>-->
                <!--<destFileName>custom-launcher.jar</destFileName>-->
                <!--</artifactItem>-->
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-felix-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                  <version>1.0.11</version>
                </artifactItem>
                <artifactItem>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-core</artifactId>
                  <version>1.0.11</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.gogo.command</artifactId>
                  <version>0.14.0</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.gogo.runtime</artifactId>
                  <version>0.12.1</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.gogo.shell</artifactId>
                  <version>0.10.0</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.configadmin</artifactId>
                  <version>1.6.0</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.dependencymanager</artifactId>
                  <version>3.1.0</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.eventadmin</artifactId>
                  <version>1.3.2</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.fileinstall</artifactId>
                  <version>3.2.6</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.log</artifactId>
                  <version>1.0.1</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.metatype</artifactId>
                  <version>1.0.6</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.scr</artifactId>
                  <version>2.0.8</version>
                </artifactItem>
                <!-- From managed dependencies -->
                <artifactItem>
                  <groupId>org.osgi</groupId>
                  <artifactId>org.osgi.enterprise</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.slf4j</groupId>
                  <artifactId>jul-to-slf4j</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.slf4j</groupId>
                  <artifactId>jcl-over-slf4j</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-persistence-libs-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/libs/persistence</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse</groupId>
                  <artifactId>org.eclipse.gemini.jpa</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.gemini</groupId>
                  <artifactId>org.eclipse.gemini.dbaccess.derby</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.gemini</groupId>
                  <artifactId>org.eclipse.gemini.dbaccess.util</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>org.eclipse.persistence.asm</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>org.eclipse.persistence.antlr</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>org.eclipse.persistence.core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>org.eclipse.persistence.jpa</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>javax.persistence</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.gemini</groupId>
                  <artifactId>org.apache.derby</artifactId>
                </artifactItem>
                <!--<artifactItem>-->
                <!--<groupId>org.daisy.pipeline</groupId>-->
                <!--<artifactId>persistence-derby</artifactId>-->
                <!--</artifactItem>-->
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-framework-libs-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>javax.xml.crypto</groupId>
                  <artifactId>jsr105-api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.xml.parsers</groupId>
                  <artifactId>jaxp-api</artifactId>
                </artifactItem>
                <!-- Runtime dependencies -->
                <artifactItem>
                  <groupId>org.apache.httpcomponents</groupId>
                  <artifactId>httpclient-osgi</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.httpcomponents</groupId>
                  <artifactId>httpcore-osgi</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>jing</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>nu.validator.htmlparser</groupId>
                  <artifactId>htmlparser</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>com.xmlcalabash</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>logback-osgi-adapter</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>saxon-he</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>servlet-api</artifactId>
                </artifactItem>
                <!-- From dependencies used at compile time in the Framework parent POM -->
                <artifactItem>
                  <groupId>com.google.guava</groupId>
                  <artifactId>guava</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-codec</groupId>
                  <artifactId>commons-codec</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-fileupload</groupId>
                  <artifactId>commons-fileupload</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-io</groupId>
                  <artifactId>commons-io</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.restlet.osgi</groupId>
                  <artifactId>org.restlet</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.restlet.osgi</groupId>
                  <artifactId>org.restlet.ext.fileupload</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.restlet.osgi</groupId>
                  <artifactId>org.restlet.ext.xml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.restlet.osgi</groupId>
                  <artifactId>org.restlet.ext.jetty</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.restlet.osgi</groupId>
                  <artifactId>org.restlet.ext.ssl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-server</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-ajp</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-util</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-http</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-io</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-continuation</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>jsslutils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.woodstox</groupId>
                  <artifactId>woodstox-core-lgpl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.woodstox</groupId>
                  <artifactId>stax2-api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>com.mysql.jdbc</groupId>
                  <artifactId>com.springsource.com.mysql.jdbc</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules-libs-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>net.java.dev.jna</groupId>
                  <artifactId>jna</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>jnaerator</artifactId>
                </artifactItem>
                <artifactItem>
                  <!-- required by jstyleparser -->
                  <!-- TODO build our own bundle ? -->
                  <groupId>org.apache.servicemix.bundles</groupId>
                  <artifactId>org.apache.servicemix.bundles.antlr-runtime</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>jstyleparser</artifactId>
                  <!--
                      FIXME: use version from framework bom
                  -->
                  <version>1.20-p12-SNAPSHOT</version>
                </artifactItem>
                <!--
                    for braille modules
                -->
                <artifactItem>
                  <groupId>org.apache.commons</groupId>
                  <artifactId>commons-lang3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>com.googlecode.texhyphj</groupId>
                  <artifactId>texhyphj</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.bindings</groupId>
                  <artifactId>jhyphen</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.braille</groupId>
                  <artifactId>braille-css</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.braille</groupId>
                  <artifactId>braille-utils.api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.braille</groupId>
                  <artifactId>braille-utils.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.braille</groupId>
                  <artifactId>braille-utils.pef-tools</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.common</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.formatter.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.hyphenator.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.task-api</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.task.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.task-runner</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.text.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.dotify</groupId>
                  <artifactId>dotify.translator.impl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>io.bit3.jsass</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>liblouis-java</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.unbescape</groupId>
                  <artifactId>unbescape</artifactId>
                </artifactItem>
                <!--
                    Dotify and epubcheck require older version of Jing
                -->
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>jing</artifactId>
                  <version>20120724.0.0</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-persistence-pipeline-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/pipeline/persistence</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>persistence-derby</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>framework-persistence</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-volatile-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/pipeline/volatile</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>framework-volatile</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-logging-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <!--
                  logging-appender and dependencies. These are framework bundles that can not be
                  reloaded dynamically without breaking things. These bundles also have dependencies
                  in copy-framework-libs-bundles which therefore need to be installed in
                  bundles/felix as well.
              -->
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>common-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>framework-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>logging-appender</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>xproc-api</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-framework-pipeline-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>calabash-adapter</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>modules-registry</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>push-notifier</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>woodstox-osgi-adapter</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>xmlcatalog</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>xpath-registry</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-webservice-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/frontend</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>webservice</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-gui-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <!--
                  gui needs to be installed and started as early on as possible
                  so that we can display a splash screen
              -->
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>gui</artifactId>
                </artifactItem>
                <!--
                    framework dependencies
                -->
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>updater-wrapper</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline</groupId>
                  <artifactId>webservice-utils</artifactId>
                </artifactItem>
                <!--
                    3rd-party dependencies
                -->
                <artifactItem>
                  <groupId>de.codecentric.centerdevice</groupId>
                  <artifactId>centerdevice-nsmenufx</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>pegdown</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>parboiled</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm-analysis</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm-tree</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm-util</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.parboiled</groupId>
                  <artifactId>parboiled-core</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules-pipeline-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/felix</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>asciimath-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>audio-common</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>audio-encoder-lame</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>common-entities</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>common-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>css-speech</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>css-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy202-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy202-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy202-validator</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy3-to-daisy202</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy3-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>daisy3-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-break-detection</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-daisy3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-html</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-odt</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-rtf</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-ssml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-zedai</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-tts</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-tts</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-validator</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-nav-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-ocf-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-pub-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>epub3-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-to-ssml</artifactId>
                </artifactItem>
                
                <!-- epub3-validator + dependencies -->
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-validator</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epubcheck-adapter</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.idpf</groupId>
                  <artifactId>epubcheck</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>com.google.guava</groupId>
                  <artifactId>guava</artifactId>
                  <version>14.0.1</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.commons</groupId>
                  <artifactId>commons-compress</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.jackson</groupId>
                  <artifactId>jackson-core-asl</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.jackson</groupId>
                  <artifactId>jackson-mapper-asl</artifactId>
                </artifactItem>
                
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>epub3-to-daisy202</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>file-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>fileset-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>html-break-detection</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>html-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>html-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>image-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>mathml-to-ssml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>mediaoverlay-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>mediatype-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>metadata-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nimas-fileset-validator</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nlp-break-detection</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nlp-common</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nlp-lexing</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nlp-omnilang-lexer</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nlp-ruled-lexer</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>odt-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>ssml-to-audio</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>text-to-ssml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-acapela</artifactId>
                </artifactItem>
                <!--
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-attbin</artifactId>
                </artifactItem>
                -->
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-espeak</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-osx</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-sapinative</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-adapter-qfrency</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-common</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>tts-helpers</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>validation-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zedai-break-detection</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zedai-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zedai-to-html</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zedai-to-ssml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zedai-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>zip-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>common-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>css-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>css-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dotify-calabash</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dotify-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dotify-formatter</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dotify-saxon</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dotify-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>dtbook-to-pef</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>epub3-to-epub3</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>epub3-to-pef</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>html-to-pef</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-libreoffice-tables</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-saxon</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-calabash</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-mathml</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-saxon</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-tables</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>pef-calabash</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>pef-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>pef-saxon</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>pef-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>texhyph-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>texhyph-saxon</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>texhyph-utils</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>xml-to-pef</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>zedai-to-pef</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-odt</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>odt-utils</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules-linux-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/modules/linux</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-native</artifactId>
                  <classifier>linux</classifier>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-native</artifactId>
                  <classifier>linux</classifier>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules-mac-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/modules/mac</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-native</artifactId>
                  <classifier>mac</classifier>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-native</artifactId>
                  <classifier>mac</classifier>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules-win-bundles</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/modules/win</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>liblouis-native</artifactId>
                  <classifier>windows</classifier>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>libhyphen-native</artifactId>
                  <classifier>windows</classifier>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-sbs-modules</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/bundles/modules</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>ch.sbs.pipeline</groupId>
                  <artifactId>dtbook-to-odt</artifactId>
                  <version>1.0.0-SNAPSHOT</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules.braille</groupId>
                  <artifactId>mod-sbs</artifactId>
                  <version>1.8.1-SNAPSHOT</version>
                </artifactItem>
                <artifactItem>
                  <groupId>ch.sbs.pipeline</groupId>
                  <artifactId>sbs-braille-tables</artifactId>
                  <version>2.3-SNAPSHOT</version>
                </artifactItem>
                <artifactItem>
                  <groupId>ch.sbs.pipeline</groupId>
                  <artifactId>sbs-hyphenation-tables</artifactId>
                  <version>1.23</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>dtbook-to-ebook</artifactId>
                  <version>1.0-SNAPSHOT</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.pipeline.modules</groupId>
                  <artifactId>nordic-epub3-dtbook-migrator</artifactId>
                  <version>1.3.1-SNAPSHOT</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.2</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>1.9.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <arguments>-Plinux,mac,win</arguments>
        </configuration>
      </plugin>
          <plugin>
            <artifactId>maven-help-plugin</artifactId>
            <version>2.1.1</version>
            <executions>
              <execution>
                <id>generate-effective-pom</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>effective-pom</goal>
                </goals>
                <configuration>
                  <output>target/tmp/effective-pom.xml</output>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-release-descriptor</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-release.xslt" />
                      <arg value="time=${maven.build.timestamp}" />
                      <arg line="-o:${project.basedir}/target/release-descriptor/releaseDescriptor.xml" />
                    </java>
                  </target>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>net.sf.saxon</groupId>
                <artifactId>Saxon-HE</artifactId>
                <version>9.5.1-5</version>
              </dependency>
            </dependencies>
          </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <prependGroupId>true</prependGroupId>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.4,)</versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>wagon-maven-plugin</artifactId>
                    <versionRange>[1.0-beta-4,)</versionRange>
                    <goals>
                      <goal>download</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>minimal</id>
      <!--
        This profile contains the updater, and any files not downloaded by the updater.
        These files are not downloaded by the updater, and so are included here (except `/samples`):
        - `/bin`
        - `/*.txt`
        - `/etc`
      -->
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-updater-all</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/linux32</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>darwin_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/mac32</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>windows_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/win32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-minimal</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                  <formats>
                    <format>dir</format>
                    <format>zip</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-minimal.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-nix.properties</filter>
                  </filters>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>pipeline2-${project.version}_minimal</finalName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-mac</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <type>zip</type>
                      <classifier>darwin_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/mac32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-mac</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>darwin_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/mac32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-mac-dir</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                  <formats>
                    <format>dir</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-mac.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-nix.properties</filter>
                  </filters>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>pipeline2-${project.version}_mac</finalName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.12</version>
            <executions>
              <execution>
                <id>parse-version</id>
                <goals>
                  <goal>parse-version</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target xmlns:fx="javafx:com.sun.javafx.tools.ant">
                    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${env.JAVA_HOME}/lib/ant-javafx.jar" />
                    <fx:deploy outdir="${project.build.directory}/javapackager" outfile="dp2" nativeBundles="image">
                      <fx:application id="org.daisy.pipeline2" mainClass="org.apache.felix.main.Main" name="DAISY Pipeline 2" version="${project.version}">
                      </fx:application>
                      <fx:info description="A tool for automated production of accessible digital publication" title="DAISY Pipeline 2" vendor="DAISY Consortium">
                        <fx:icon href="${project.basedir}/src/main/mac/pipeline-logo.icns" />
                      </fx:info>
                      <fx:platform j2se="8.0+">
                        <fx:jvmarg value="-Xms256M" />
                        <fx:jvmarg value="-Xmx1G" />
                        <fx:jvmarg value="-XX:PermSize=16M" />
                        <fx:jvmarg value="-XX:MaxPermSize=256M" />
                        <fx:property name="org.daisy.pipeline.main.mode" value="gui" />
                        <fx:property name="org.daisy.pipeline.home" value="." />
                        <fx:property name="org.daisy.pipeline.data" value="data" />
                        <fx:property name="org.daisy.pipeline.base" value="." />
                        <fx:property name="org.daisy.pipeline.ws.localfs" value="true" />
                        <fx:property name="org.daisy.pipeline.ws.authentication" value="false" />
                        <fx:property name="felix.config.properties" value="file:etc/config.properties" />
                        <fx:property name="felix.system.properties" value="file:etc/system.properties" />
                      </fx:platform>
                      <fx:resources>
                        <fx:fileset type="jar" dir="${project.build.directory}/pipeline2-${project.version}_mac/daisy-pipeline" includes="system/bootstrap/felix.jar" />
                        <fx:fileset type="license" os="osx" dir="${project.build.directory}/pipeline2-${project.version}_mac/daisy-pipeline" includes="NOTICE.txt" />
                        <fx:fileset dir="${project.build.directory}/pipeline2-${project.version}_mac/daisy-pipeline">
                          <include name="**/*" />
                        </fx:fileset>
                      </fx:resources>
                      <fx:bundleArgument arg="mac.CFBundleIdentifier" value="org.daisy.pipeline2" />
                      <fx:bundleArgument arg="mac.CFBundleVersion" value="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}" />
                    </fx:deploy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>install-node</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <configuration>
                  <nodeVersion>v6.9.1</nodeVersion>
                  <yarnVersion>v0.17.8</yarnVersion>
                </configuration>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>add appdmg</arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>node/node</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>node_modules/appdmg/bin/appdmg.js</argument>
                    <argument>${project.basedir}/src/main/mac/dmg.json</argument>
                    <argument>pipeline2-${project.version}_mac.dmg</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>zip-mac</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-mac</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <type>zip</type>
                      <classifier>darwin_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/mac32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-mac</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>darwin_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/mac32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-mac-zip</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                  <formats>
                    <format>zip</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-mac.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-nix.properties</filter>
                  </filters>
                  <appendAssemblyId>true</appendAssemblyId>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <name>linux</name>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>ch.sbs</groupId>
            <artifactId>project-version-maven-plugin</artifactId>
            <!--
                depends on master branch
            -->
            <version>1.0.0-SNAPSHOT</version>
            <executions>
              <execution>
                <goals>
                  <goal>set-detailed-project-version</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-linux</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/linux32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-linux</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/linux32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                  <formats>
                    <format>zip</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-linux.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-nix.properties</filter>
                  </filters>
                  <appendAssemblyId>true</appendAssemblyId>
                </configuration>
              </execution>
              <execution>
                <id>dist-mac-dir</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-mac-zip</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-win</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>win</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <nsis.scriptfile>target/nsis/installer.nsi</nsis.scriptfile>
        <nsis.output.file>pipeline2-${project.version}_windows.exe</nsis.output.file>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-win</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <version>2.0.0</version>
                      <type>zip</type>
                      <classifier>windows_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/win32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-win</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>windows_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/win32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-gui-win</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater-gui</artifactId>
                      <type>zip</type>
                      <classifier>windows_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/win32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-win</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                  <formats>
                    <format>dir</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-win.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-win.properties</filter>
                  </filters>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>pipeline2-${project.version}_win</finalName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- NSIS Installer -->
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/nsis</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/nsis</directory>
                      <includes>
                        <include>installer.nsi</include>
                      </includes>
                      <filtering>true</filtering>
                    </resource>
                    <resource>
                      <directory>src/main/nsis</directory>
                      <excludes>
                        <exclude>installer.nsi</exclude>
                      </excludes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>nsis-maven-plugin</artifactId>
            <version>1.0-alpha-1</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>generate-headerfile</goal>
                  <goal>make</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- !!!FIXME!!! -->
          <!-- This a gross hack to detach the `exe` artifact,
               since nsis-maven-plugin doesn't expose the option 
               to *not* attach the resulting executable -->
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <version>2.0</version>
            <executions>
              <execution>
                <id>detach-exe</id>
                <phase>package</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    org.apache.maven.artifact.Artifact exe;
                    for (artifact in project.getAttachedArtifacts()) {
                      if(artifact.getType()=="exe")
                        exe = artifact;
                    }
                    project.getAttachedArtifacts().remove(exe);
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dev-launcher</id>
      <build>
        <plugins>
          <!--<plugin>-->
            <!--<artifactId>maven-help-plugin</artifactId>-->
            <!--<version>2.1.1</version>-->
            <!--<executions>-->
              <!--<execution>-->
                <!--<id>generate-effective-pom</id>-->
                <!--<phase>generate-resources</phase>-->
                <!--<goals>-->
                  <!--<goal>effective-pom</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--<output>target/tmp/effective-pom.xml</output>-->
                <!--</configuration>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-fileinstall-cfg-files</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-modules-linux-bundles" />
                      <arg value="startLevel=50" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc" />
                      <arg value="prefix=modules" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-webservice-bundles" />
                      <arg value="startLevel=100" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc/webservice" />
                      <arg value="prefix=frontend" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-modules-mac-bundles" />
                      <arg value="startLevel=50" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc" />
                      <arg value="prefix=modules" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-modules-win-bundles" />
                      <arg value="startLevel=50" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc" />
                      <arg value="prefix=modules" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-sbs-modules" />
                      <arg value="startLevel=50" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc" />
                      <arg value="prefix=modules" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-volatile-bundles" />
                      <arg value="startLevel=100" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc/gui" />
                      <arg value="prefix=frontend" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                    <java classname="net.sf.saxon.Transform" failonerror="true">
                      <arg value="${project.basedir}/target/tmp/effective-pom.xml" />
                      <arg value="${project.basedir}/src/main/xslt/pom-to-fileinstall-config.xsl" />
                      <arg value="id=copy-persistence-pipeline-bundles" />
                      <arg value="startLevel=100" />
                      <arg value="dest=${project.baseUri}/target/generated-resources/etc/webservice" />
                      <arg value="prefix=frontend" />
                      <arg value="localRepository=${settings.localRepository}" />
                    </java>
                  </target>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>net.sf.saxon</groupId>
                <artifactId>Saxon-HE</artifactId>
                <version>9.5.1-5</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-mac-dir</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-linux</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-win</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dev-launcher-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                  <descriptors>
                    <descriptor>src/main/assembly/dev.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>${project.basedir}/src/main/assembly/dev.properties</filter>
                  </filters>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>dev-launcher</finalName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>nsis-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>detach-exe</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deb</id>
      <properties>
        <pipeline.user>pipeline2</pipeline.user>
        <pipeline.home>/opt/daisy-pipeline2</pipeline.home>
        <pipeline.data>/var/opt/daisy-pipeline2</pipeline.data>
        <pipeline.log>/var/log/daisy-pipeline2</pipeline.log>
        <pipeline.config>/etc/opt/daisy-pipeline2</pipeline.config>
        <pipeline.cli.home>/opt/daisy-pipeline2-cli</pipeline.cli.home>
        <pipeline.cli.config>/etc/opt/daisy-pipeline2-cli</pipeline.cli.config>
        <bundles.auto.deploy>system/felix</bundles.auto.deploy>
        <bundles.bootstrap>system/bootstrap</bundles.bootstrap>
        <bundles.modules>modules</bundles.modules>
        <pipeline.ws.host>http://localhost</pipeline.ws.host>
        <pipeline.ws.port>8181</pipeline.ws.port>
        <pipeline.ws.path>ws</pipeline.ws.path>
        <pipeline.ws.timeout>60</pipeline.ws.timeout>
        <pipeline.ws.cmd.unix>../bin/pipeline2</pipeline.ws.cmd.unix>
        <pipeline.ws.local>true</pipeline.ws.local>
        <pipeline.ws.authenticate>false</pipeline.ws.authenticate>
        <pipeline.ws.clientkey>clientid</pipeline.ws.clientkey>
        <pipeline.ws.clientsecret>supersecret</pipeline.ws.clientsecret>
        <pipeline.cli.exec_line>/dev/null</pipeline.cli.exec_line>
        <pipeline.cli.starting>false</pipeline.cli.starting>
        <pipeline.log.jobappender>org.daisy.pipeline.logging.IgnoreSiftAppender</pipeline.log.jobappender>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-linux</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/linux32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-updater-linux</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>updater</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/updater/linux32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>filter-debian-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>target/filtered-resources</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/resources</directory>
                      <targetPath>resources</targetPath>
                      <filtering>true</filtering>
                      <includes>
                        <include>bin/pipeline2</include>
                        <include>etc/config.properties</include>
                        <include>etc/org.apache.felix.fileinstall-modules.cfg</include>
                        <include>etc/system.properties</include>
                        <include>etc/config-logback.xml</include>
                      </includes>
                    </resource>
                    <resource>
                      <directory>src/main/deb</directory>
                      <targetPath>deb</targetPath>
                      <filtering>true</filtering>
                    </resource>
                    <resource>
                      <directory>src/main/resources/cli</directory>
                      <targetPath>cli</targetPath>
                      <includes>
                        <include>config.yml</include>
                      </includes>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.vafer</groupId>
            <artifactId>jdeb</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>package-deb</id>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <controlDir>target/filtered-resources/deb/DEBIAN</controlDir>
                  <timestamped>true</timestamped>
                  <classifier>all</classifier>
                  <deb>target/daisy-pipeline2_${project.detailedVersion}_all.deb</deb>
                  <dataSet>
                    <!-- ======== -->
                    <!-- binaries -->
                    <!-- ======== -->
                    <data>
                      <type>directory</type>
                      <src>target/filtered-resources/resources/bin</src>
                      <includes>
                        pipeline2
                      </includes>
                      <mapper>
                        <type>perm</type>
                        <prefix>${pipeline.home}/bin</prefix>
                        <filemode>755</filemode>
                      </mapper>
                    </data>
                    <data>
                      <type>file</type>
                      <src>target/filtered-resources/deb${pipeline.home}/bin/debian.cfg</src>
                      <dst>${pipeline.home}/bin/debian.cfg</dst>
                    </data>
                    <!-- ====== -->
                    <!-- daemon -->
                    <!-- ====== -->
                    <data>
                      <src>target/filtered-resources/deb/etc/init.d/daisy-pipeline2</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/init.d</prefix>
                        <filemode>755</filemode>
                      </mapper>
                    </data>
                    <!-- =================== -->
                    <!-- configuration files -->
                    <!-- =================== -->
                    <data>
                      <type>directory</type>
                      <src>src/main/resources/etc</src>
                      <excludes>
                        config.properties,
                        config-logback.xml,
                        org.apache.felix.fileinstall-modules.cfg,
                        system.properties
                      </excludes>
                      <mapper>
                        <prefix>${pipeline.home}/etc</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/filtered-resources/resources/etc</src>
                      <includes>
                        config.properties,
                        org.apache.felix.fileinstall-modules.cfg,
                        system.properties
                      </includes>
                      <mapper>
                        <prefix>${pipeline.home}/etc</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>file</type>
                      <src>target/filtered-resources/resources/etc/config-logback.xml</src>
                      <dst>${pipeline.config}/config-logback.xml</dst>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>${pipeline.config}/system.properties</linkName>
                      <linkTarget>${pipeline.home}/etc/system.properties</linkTarget>
                    </data>
                    <data>
                      <type>file</type>
                      <src>src/main/deb/etc/default/daisy-pipeline2</src>
                      <dst>/etc/default/daisy-pipeline2</dst>
                    </data>
                    <!-- ============== -->
                    <!-- system bundles -->
                    <!-- ============== -->
                    <data>
                      <type>directory</type>
                      <src>target/bundles/bootstrap</src>
                      <mapper>
                        <prefix>${pipeline.home}/${bundles.bootstrap}</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/felix</src>
                      <excludes>
                        org.apache.felix.org.apache.felix.gogo*
                      </excludes>
                      <mapper>
                        <prefix>${pipeline.home}/${bundles.auto.deploy}</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/felix</src>
                      <includes>
                        org.apache.felix.org.apache.felix.gogo*
                      </includes>
                      <mapper>
                        <prefix>${pipeline.home}/${bundles.auto.deploy}/gogo</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/libs</src>
                      <mapper>
                        <prefix>${pipeline.home}/system/framework</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/pipeline</src>
                      <mapper>
                        <prefix>${pipeline.home}/system/framework</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/frontend</src>
                      <mapper>
                        <prefix>${pipeline.home}/system/frontend</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <!-- ======= -->
                    <!-- modules -->
                    <!-- ======= -->
                    <data>
                      <type>directory</type>
                      <src>target/bundles/modules</src>
                      <excludes>
                        linux, linux/*,
                        win,   win/*,
                        mac,   mac/*
                      </excludes>
                      <mapper>
                        <prefix>${pipeline.home}/${bundles.auto.deploy}</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <data>
                      <type>directory</type>
                      <src>target/bundles/modules/linux</src>
                      <mapper>
                        <prefix>${pipeline.home}/${bundles.auto.deploy}</prefix>
                        <type>perm</type>
                      </mapper>
                    </data>
                    <!-- ========= -->
                    <!-- log files -->
                    <!-- ========= -->
                    <data>
                      <type>template</type>
                      <paths>
                        <path>${pipeline.log}</path>
                      </paths>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
              <execution>
                <id>package-deb-cli</id>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <controlDir>target/filtered-resources/deb/DEBIAN.cli</controlDir>
                  <timestamped>true</timestamped>
                  <classifier>cli_all</classifier>
                  <deb>target/daisy-pipeline2-cli_${cli.version}_all.deb</deb>
                  <dataSet>
                    <!-- ============ -->
                    <!-- cli binaries -->
                    <!-- ============ -->
                    <data>
                      <type>directory</type>
                      <src>target/cli/linux32</src>
                      <includes>
                        dp2
                      </includes>
                      <mapper>
                        <type>perm</type>
                        <prefix>${pipeline.cli.home}</prefix>
                        <filemode>755</filemode>
                      </mapper>
                    </data>
                    <!-- ======================= -->
                    <!-- cli configuration files -->
                    <!-- ======================= -->
                    <data>
                      <type>file</type>
                      <src>target/filtered-resources/cli/config.yml</src>
                      <dst>${pipeline.cli.home}/config.yml</dst>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>${pipeline.cli.config}/config.yml</linkName>
                      <linkTarget>${pipeline.cli.home}/config.yml</linkTarget>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-mac-dir</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-linux</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-win</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-app-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>install-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-appdmg</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- REDHAT/CentOS RPM packet server engine -->
    <profile>
      <id>rpm</id>
      <properties>
        <pipeline.user>root</pipeline.user>
        <pipeline.group>root</pipeline.group>
        <pipeline.home>/opt/daisy-pipeline2</pipeline.home>
        <bundles.auto.deploy>system/felix</bundles.auto.deploy> <!-- don't change! must be the same as in dist.properties -->
        <bundles.bootstrap>system/bootstrap</bundles.bootstrap> <!-- don't change! must be the same as in dist.properties -->
        <bundles.modules>modules</bundles.modules> <!-- don't change! must be the same as in dist.properties -->
        <pipeline.log.jobappender>org.daisy.pipeline.logging.IgnoreSiftAppender</pipeline.log.jobappender>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>dist-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>false</attach>
                  <formats>
                    <format>dir</format>
                  </formats>
                  <descriptors>
                    <descriptor>src/main/assembly/dist-linux.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/dist.properties</filter>
                    <filter>src/main/assembly/dist-nix.properties</filter>
                  </filters>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>pipeline2-${project.version}_linux</finalName>
                </configuration>
              </execution>
              <execution>
                <id>dist-mac-dir</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>dist-win</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.0.1</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>attached-rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>pipeline2</name>
              <group>daisy-pipeline2</group>
              <description>daisy-pipeline2</description>
              <needarch>x86_64</needarch>
              <mappings>
                <mapping>
                  <directory>${pipeline.home}</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>src/main/resources</location>
                      <includes>
                        <include>etc/**</include>
                        <include>NOTICE.txt</include>
                        <include>README.txt</include>
                      </includes>
                      <excludes>
                        <exclude>etc/system.properties</exclude>
                        <exclude>etc/config.properties</exclude>
                        <exclude>etc/org.apache.felix.fileinstall-modules.cfg</exclude>
                      </excludes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}</directory>
                  <filemode>0640</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>src/main/resources</location>
                      <includes>
                        <include>etc/system.properties</include>
                        <include>etc/config.properties</include>
                        <include>etc/org.apache.felix.fileinstall-modules.cfg</include>
                        <include>etc/config-logback.xml</include>
                      </includes>
                      <filter>true</filter>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}</directory>
                  <filemode>0550</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>src/main/resources</location>
                      <includes>
                        <include>bin/**</include>
                      </includes>
                      <excludes>
                        <exclude>bin/pipeline2.bat</exclude>
                      </excludes>
                      <filter>true</filter>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/${bundles.bootstrap}</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/bootstrap</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/${bundles.auto.deploy}</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/felix</location>
                      <excludes>
                        <exclude>org.apache.felix.org.apache.felix.gogo*</exclude>
                      </excludes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/${bundles.auto.deploy}/gogo</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/felix</location>
                      <includes>
                        <include>org.apache.felix.org.apache.felix.gogo*</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/system/framework</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/libs</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/system/framework</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/pipeline</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/system/frontend</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/frontend</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/system/gui</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/gui</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.home}/${bundles.modules}</directory>
                  <filemode>0644</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/bundles/modules</location>
                      <excludes>
                        <exclude>linux</exclude>
                        <exclude>linux/*</exclude>
                        <exclude>win</exclude>
                        <exclude>win/*</exclude>
                        <exclude>mac</exclude>
                        <exclude>mac/*</exclude>
                      </excludes>
                    </source>
                    <source>
                      <location>${project.basedir}/target/bundles/modules/linux</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
              <filters>
                <filter>src/main/assembly/dist.properties</filter>
                <filter>src/main/assembly/dist-nix.properties</filter>
              </filters>
              <postremoveScriptlet>
                <script>
rm -rf /opt/daisy-pipeline2
                </script>
              </postremoveScriptlet>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- REDHAT/CentOS RPM packet cli -->
    <profile>
      <id>rpm-cli</id>
      <properties>
        <pipeline.user>root</pipeline.user>
        <pipeline.group>root</pipeline.group>
        <pipeline.home>/opt/daisy-pipeline2</pipeline.home>
        <pipeline.cli.home>${pipeline.home}/cli</pipeline.cli.home>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-cli-linux</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.daisy.pipeline</groupId>
                      <artifactId>cli</artifactId>
                      <type>zip</type>
                      <classifier>linux_386</classifier>
                      <outputDirectory>${project.build.directory}/cli/linux32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.0.1</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>pipeline2-cli</name>
              <group>daisy-pipeline2-cli</group>
              <projversion>${cli.version}</projversion>
              <description>daisy-pipeline2-cli</description>
              <needarch>x86_64</needarch>
              <mappings>
                <mapping>
                  <directory>${pipeline.cli.home}</directory>
                  <filemode>0640</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>src/main/resources/cli</location>
                      <includes>
                        <include>config.yml</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${pipeline.cli.home}</directory>
                  <filemode>0640</filemode>
                  <username>${pipeline.user}</username>
                  <groupname>${pipeline.group}</groupname>
                  <sources>
                    <source>
                      <location>${project.basedir}/target/cli/linux32</location>
                      <includes>
                        <include>dp2</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
              </mappings>
              <postremoveScriptlet>
                <script>
rm -rf /opt/daisy-pipeline2/cli
                </script>
              </postremoveScriptlet>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
  <repositories>
    <!--
      Restlet is not on Maven Central
      https://github.com/restlet/restlet-framework-java/issues/481
     -->
    <repository>
      <id>central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- Restlet maven repository - They don't publish their stuff on maven central -->
    <repository>
      <id>restlet-repo</id>
      <name>Public online Restlet repository</name>
      <url>http://maven.restlet.org</url>
    </repository>
    <repository>
      <id>eclipselink</id>
      <name>EclipseLink Releases</name>
      <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
    </repository>
    <repository>
      <id>eclipse-gemini-dbaccess</id>
      <name>Eclipse Gemini DBAccess Milestones</name>
      <url>http://download.eclipse.org/gemini/dbaccess/mvn/</url>
    </repository>
    <!-- gemini related bundles and derby -->
    <repository>
      <id>eclipse-gemini-repo</id>
      <name>Eclipse Gemini Maven repository</name>
      <url>http://download.eclipse.org/gemini/mvn/</url>
    </repository>
    <!-- springsource used for osgi version of mysql -->
    <repository>
      <id>com.springsource.repository.bundles.external</id>
      <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
  </repositories>
</project>
