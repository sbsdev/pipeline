apply plugin: 'java'
apply plugin: "maven"
//custom plugins
apply plugin: "org.dm.bundle"
apply plugin: "signing"

group = 'org.daisy.dotify'

sourceSets {
	main {	java { srcDir 'src' }	resources { srcDir 'src' } }
	test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

configurations {
	provided
	compile { extendsFrom provided }
}

/* Run gradle with JDK 1.7 or set bootstrap classpath, e.g.:
	options.bootClasspath = "/usr/lib/jvm/java-7-openjdk/jre/lib/rt.jar" */
compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

compileTestJava {
	options.encoding = 'UTF-8'
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
}

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

javadoc {
	options.encoding = 'UTF-8'
	options.links('http://docs.oracle.com/javase/7/docs/api/')
}

repositories {
    mavenCentral()
    mavenLocal()
    //maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    testCompile group: "junit", name: "junit", version: "4.7"
}

buildscript {
    repositories { mavenCentral() }
    dependencies { classpath group: "org.dm.gradle", name: "gradle-bundle-plugin", version: "0.6.4" }
}

task updateBndVersion() << {
	String contents = file('bnd.bnd').getText('UTF-8')
	file('bnd.bnd').write(contents.replaceAll('Bundle-Version: [\\d\\.A-Za-z\\-]+', "Bundle-Version: $version"), 'UTF-8')
}

bundle {
	instructions << [
		"-include": file('bnd.bnd'),
		'Built-By': System.getProperty("user.name"),
        'Built-On': new Date().format('yyyy-MM-dd'),
        'Repository-Revision': "$repoRevision",
        'Repository-URL': "$repositoryURL"
	]
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
    repositories {
        mavenDeployer {
            if (isReleaseVersion) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name 'dotify.common'
                packaging 'jar'
                description 'Dotify Common'
                url "$repositoryURL"
                scm {
                    connection "$repositorySCM"
                    developerConnection "$repositorySCM"
                    url "$repositoryURL"
                }
                licenses {
                    license {
                        name 'LGPL'
                        url 'http://www.gnu.org/licenses/lgpl.html'
                    }
                }
                developers {
                    developer {
                        id 'joel'
                        name 'Joel HÃ¥kansson'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
