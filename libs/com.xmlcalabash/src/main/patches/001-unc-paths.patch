From 79a486fe6d7e584485d296b704ff9efe5b5973ea Mon Sep 17 00:00:00 2001
From: Romain Deltour <rdeltour@gmail.com>
Date: Tue, 23 Dec 2014 15:26:12 +0100
Subject: [PATCH] Better URI-to-File conversion

This should notably better handle UNC paths, which are often
represented as file URIs with an authority component.
---
 src/com/xmlcalabash/extensions/RDFStore.java           |  5 ++++-
 src/com/xmlcalabash/extensions/fileutils/Info.java     |  4 +++-
 src/com/xmlcalabash/extensions/fileutils/Tempfile.java |  4 +++-
 src/com/xmlcalabash/io/FileDataStore.java              | 14 ++++++++------
 src/com/xmlcalabash/util/URIUtils.java                 |  7 +++++++
 5 files changed, 25 insertions(+), 9 deletions(-)

diff --git src/com/xmlcalabash/extensions/RDFStore.java src/com/xmlcalabash/extensions/RDFStore.java
index a419725..25a45d9 100644
--- src/com/xmlcalabash/extensions/RDFStore.java
+++ src/com/xmlcalabash/extensions/RDFStore.java
@@ -8,9 +8,12 @@ import com.xmlcalabash.core.XProcRuntime;
 import com.xmlcalabash.runtime.XAtomicStep;
 import com.xmlcalabash.util.Base64;
 import com.xmlcalabash.util.TreeWriter;
+import com.xmlcalabash.util.URIUtils;
+
 import net.sf.saxon.s9api.QName;
 import net.sf.saxon.s9api.SaxonApiException;
 import net.sf.saxon.s9api.XdmNode;
+
 import org.apache.jena.riot.Lang;
 import org.apache.jena.riot.RiotReader;
 import org.apache.jena.riot.lang.LangRIOT;
@@ -105,7 +108,7 @@ public class RDFStore extends RDFStep {
                 baos = new ByteArrayOutputStream();
                 outstr = baos;
             } else if (href.getScheme().equals("file")) {
-                File output = new File(href);
+                File output = URIUtils.toFile(href);
 
                 File path = new File(output.getParent());
                 if (!path.isDirectory()) {
diff --git src/com/xmlcalabash/extensions/fileutils/Info.java src/com/xmlcalabash/extensions/fileutils/Info.java
index b84e168..f0fcee4 100644
--- src/com/xmlcalabash/extensions/fileutils/Info.java
+++ src/com/xmlcalabash/extensions/fileutils/Info.java
@@ -13,6 +13,8 @@ import com.xmlcalabash.util.AxisNodes;
 import com.xmlcalabash.util.MessageFormatter;
 import com.xmlcalabash.util.TreeWriter;
 import com.xmlcalabash.util.S9apiUtils;
+import com.xmlcalabash.util.URIUtils;
+
 import net.sf.saxon.s9api.QName;
 import net.sf.saxon.s9api.SaxonApiException;
 import net.sf.saxon.s9api.XdmNode;
@@ -90,7 +92,7 @@ public class Info extends DefaultStep {
         tree.startDocument(step.getNode().getBaseURI());
 
         if ("file".equals(uri.getScheme())) {
-            File file = new File(uri.getPath());
+            File file = URIUtils.toFile(uri);
 
             if (!file.exists()) {
                 if (failOnError) {
diff --git src/com/xmlcalabash/extensions/fileutils/Tempfile.java src/com/xmlcalabash/extensions/fileutils/Tempfile.java
index dd366e8..10930bf 100644
--- src/com/xmlcalabash/extensions/fileutils/Tempfile.java
+++ src/com/xmlcalabash/extensions/fileutils/Tempfile.java
@@ -8,6 +8,8 @@ import com.xmlcalabash.core.XProcException;
 import com.xmlcalabash.runtime.XAtomicStep;
 import com.xmlcalabash.model.RuntimeValue;
 import com.xmlcalabash.util.TreeWriter;
+import com.xmlcalabash.util.URIUtils;
+
 import net.sf.saxon.s9api.QName;
 import net.sf.saxon.s9api.SaxonApiException;
 
@@ -72,7 +74,7 @@ public class Tempfile extends DefaultStep {
         if (!"file".equals(uri.getScheme())) {
             throw new XProcException(step.getNode(), "Only file: scheme URIs are supported by the tempfile step.");
         } else {
-            file = new File(uri.getPath());
+            file = URIUtils.toFile(uri);
         }
 
         if (!file.isDirectory()) {
diff --git src/com/xmlcalabash/io/FileDataStore.java src/com/xmlcalabash/io/FileDataStore.java
index 8433562..d0a7270 100644
--- src/com/xmlcalabash/io/FileDataStore.java
+++ src/com/xmlcalabash/io/FileDataStore.java
@@ -21,6 +21,8 @@
 package com.xmlcalabash.io;
 
 import com.xmlcalabash.core.XProcException;
+import com.xmlcalabash.util.URIUtils;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -67,7 +69,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+			File file = URIUtils.toFile(uri);
 			String suffix = getFileSuffixFromType(media);
 			if (file.isDirectory() || uri.getPath().endsWith("/")) {
 				if (!file.isDirectory() && !file.mkdirs()) {
@@ -114,7 +116,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+		        File file = URIUtils.toFile(uri);
 			String type = getContentTypeFromName(file.getName());
             if (overrideContentType != null) {
                 type = overrideContentType;
@@ -136,7 +138,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+		        File file = URIUtils.toFile(uri);
 			String type;
 			if (file.isFile()) {
 				type = getContentTypeFromName(file.getName());
@@ -157,7 +159,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+		        File file = URIUtils.toFile(uri);
 
             if (!file.canRead()) {
                 throw XProcException.stepError(12);
@@ -186,7 +188,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+		        File file = URIUtils.toFile(uri);
 			if (file.isDirectory()) {
 				return file.toURI();
 			} else if (file.exists()) {
@@ -209,7 +211,7 @@ public class FileDataStore implements DataStore {
 		URI baseURI = URI.create(base);
 		URI uri = baseURI.resolve(href);
 		if ("file".equalsIgnoreCase(uri.getScheme())) {
-			File file = new File(uri);
+		        File file = URIUtils.toFile(uri);
 			if (!file.exists()) {
 				throw new FileNotFoundException(file.toURI().toASCIIString());
 			} else if (!file.delete()) {
diff --git src/com/xmlcalabash/util/URIUtils.java src/com/xmlcalabash/util/URIUtils.java
index e5221a2..5a04a93 100644
--- src/com/xmlcalabash/util/URIUtils.java
+++ src/com/xmlcalabash/util/URIUtils.java
@@ -21,6 +21,7 @@
 package com.xmlcalabash.util;
 
 import com.xmlcalabash.core.XProcException;
+
 import java.io.UnsupportedEncodingException;
 import java.io.File;
 import java.net.URI;
@@ -100,4 +101,10 @@ public class URIUtils {
         URI cwd = cwdAsURI();
         return cwd.resolve(encode(localFn));
     }
+    
+    public static File toFile(URI uri) {
+        if (!"file".equalsIgnoreCase(uri.getScheme()))
+            throw new IllegalStateException("Expecting a file URI");
+        return new File((uri.getAuthority() != null && uri.getAuthority().length() > 0)?"//"+uri.getAuthority()+uri.getPath():uri.getPath());
+    }
 }
-- 
2.2.1

