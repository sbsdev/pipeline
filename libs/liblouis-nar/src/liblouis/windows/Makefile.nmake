# Make liblouis.dll and liblouis.lib

# Do not edit this file. Make changes in configure.mk

!include configure.mk

CC = cl.exe
CFLAGS = /nologo /O2 /W3 /c /MD

# The Visual C++ C Runtime deprecates several standard library functions in
# preference for _s variants that are specific to Visual C++. This removes
# those deprecation warnings.
CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_WARNINGS
# The Visual C++ C Runtime deprecates standard POSIX APIs that conflict with
# reserved ISO C names (like strdup) in favour of non-portable conforming
# variants that start with an '_'. This removes those deprecation warnings. */
CFLAGS = $(CFLAGS) /D_CRT_NONSTDC_NO_DEPRECATE

CFLAGS = $(CFLAGS) /Iinclude
HEADERS = $(SRCDIR)\louis.h include\liblouis.h include\config.h
DLLFLAGS = /dll /nologo
LIBFLAGS = /nologo
OBJ = compileTranslationTable.obj lou_translateString.obj \
    lou_backTranslateString.obj logging.obj wrappers.obj pattern.obj

!if "$(UCS)" == "2"
CFLAGS = $(CFLAGS) /DWIDECHAR_TYPE="unsigned short int"
CFLAGS = $(CFLAGS) /DUNICODEBITS=16
!else
CFLAGS = $(CFLAGS) /DWIDECHAR_TYPE="unsigned int"
CFLAGS = $(CFLAGS) /DUNICODEBITS=32
!endif

all: liblouis.lib liblouis.def
    link $(DLLFLAGS) /DEF:liblouis.def /OUT:liblouis.dll $(OBJ)  
clean:
    clean.bat
liblouis.lib: $(OBJ)
    lib $(LIBFLAGS) $(OBJ) /out:liblouis.lib

compileTranslationTable.obj: $(SRCDIR)\compileTranslationTable.c \
    $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\compileTranslationTable.c

lou_translateString.obj: $(SRCDIR)\lou_translateString.c  $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\lou_translateString.c

lou_backTranslateString.obj: $(SRCDIR)\lou_backTranslateString.c \
    $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\lou_backTranslateString.c

logging.obj: $(SRCDIR)\logging.c $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\logging.c

wrappers.obj: $(SRCDIR)\wrappers.c $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\wrappers.c

pattern.obj: $(SRCDIR)\pattern.c $(HEADERS)
    $(CC) $(CFLAGS) $(SRCDIR)\pattern.c
